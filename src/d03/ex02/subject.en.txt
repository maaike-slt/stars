file to turn in:		find_char.c
forbidden functions:	all stdlib functions

you are very happy to be able to handle that many situation
and to not explode 💥 impressivingly

the magical bunny 🐇 says:
- 'You are getting it!
   this next one won't be hard, don't worry
   your goal will be to tell me if a number is more or less than 42'

this time, you don't see any threat attacking you
you decide to take it nice and slow :3

all of a suddent, the trees in the forest start to move
then you begin to see a beautiful lake right in front of you

you shall create the function `over_42`
with the prototype:
```c
size_t	over_42(uint8_t *arr, size_t size);
```

💡🐇 a `uint8_t` (defined in `stdint.h`) is an `unsigned` number
     that takes 8 bits (1 byte), (MIN 0, MAX 255)
	 in C, depending on what computer you are, an `int`
	 can takes a different amount of bytes
	 to handle that un-uniform problem, the:
	 	- `int8_t`
	 	- `int16_t`
	 	- `int32_t`
		- `uint8_t`
		- `uint16_t`
		- `uint32_t`
	has been created, they are standard
	and you should try to use them as much as possible

this function takes and `array` and its `size` in input
it shall return how many elements of the array are strictly over 42

if `arr` = [0, 21, 43]
	and `size` = 3:
uint8_t	arr[] = {0, 21, 43};
over_42(arr, 3) = 1

if `arr` = [0, 21, 41]
	and `size` = 3:
uint8_t	arr[] = {0, 21, 41};
over_42(arr, 3) = 0

if `arr` = [0, 21, 42]
	and `size` = 3:
uint8_t	arr[] = {0, 21, 42};
over_42(arr, 3) = 0

if `arr` = []
	and `size` = 0:
uint8_t	arr[];
over_42(arr, 0) = 0

good luck :3
